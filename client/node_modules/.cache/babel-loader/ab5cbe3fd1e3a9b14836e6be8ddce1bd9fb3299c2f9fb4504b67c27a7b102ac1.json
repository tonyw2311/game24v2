{"ast":null,"code":"var _jsxFileName = \"/Users/theanthonywong/Code/cardGame24_v2/client/src/components/Timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer(props) {\n  _s();\n  const {\n    initialMinute = '05',\n    initialSeconds = '00'\n  } = props;\n  const [minutes, setMinutes] = useState(initialMinute);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (Number(seconds) > 0) {\n        setSeconds(Number(seconds - 1).toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        }));\n      }\n      if (Number(seconds) === 0) {\n        if (Number(minutes) === 0) {\n          clearInterval(myInterval);\n        } else {\n          setMinutes(Number(minutes - 1).toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          }));\n          setSeconds('59');\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  var start = Date.now();\n  setInterval(function () {\n    var delta = Date.now() - start; // milliseconds elapsed since start\n    console.log(Math.floor(delta / 1000)); // in seconds\n    // alternatively just show wall clock time:\n    //console.log(new Date().toUTCString());\n  }, 1000); // update about every second\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [minutes, \":\", seconds]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"gNO+E08HEmvDB3Il8SyuqxGM2a0=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","props","_s","initialMinute","initialSeconds","minutes","setMinutes","seconds","setSeconds","myInterval","setInterval","Number","toLocaleString","undefined","minimumIntegerDigits","clearInterval","start","Date","now","delta","console","log","Math","floor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/theanthonywong/Code/cardGame24_v2/client/src/components/Timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Timer(props) {\n\n    const { initialMinute = '05', initialSeconds = '00' } = props;\n    const [minutes, setMinutes] = useState(initialMinute);\n    const [seconds, setSeconds] = useState(initialSeconds);\n    useEffect(() => {\n        let myInterval = setInterval(() => {\n            if (Number(seconds) > 0) {\n                setSeconds(Number(seconds - 1).toLocaleString(undefined, { minimumIntegerDigits: 2 }));\n            }\n            if (Number(seconds) === 0) {\n                if (Number(minutes) === 0) {\n                    clearInterval(myInterval)\n                } else {\n                    setMinutes(Number(minutes - 1).toLocaleString(undefined, { minimumIntegerDigits: 2 }));\n                    setSeconds('59');\n                }\n            }\n        }, 1000)\n        return () => {\n            clearInterval(myInterval);\n        };\n    });\n    var start = Date.now();\n    setInterval(function () {\n        var delta = Date.now() - start; // milliseconds elapsed since start\n        console.log(Math.floor(delta / 1000)); // in seconds\n        // alternatively just show wall clock time:\n        //console.log(new Date().toUTCString());\n    }, 1000); // update about every second\n\n    return (\n        <div >\n            {minutes}:{seconds}\n        </div>\n    )\n}\n\nexport default Timer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAM;IAAEC,aAAa,GAAG,IAAI;IAAEC,cAAc,GAAG;EAAK,CAAC,GAAGH,KAAK;EAC7D,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACO,aAAa,CAAC;EACrD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACQ,cAAc,CAAC;EACtDP,SAAS,CAAC,MAAM;IACZ,IAAIY,UAAU,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIC,MAAM,CAACJ,OAAO,CAAC,GAAG,CAAC,EAAE;QACrBC,UAAU,CAACG,MAAM,CAACJ,OAAO,GAAG,CAAC,CAAC,CAACK,cAAc,CAACC,SAAS,EAAE;UAAEC,oBAAoB,EAAE;QAAE,CAAC,CAAC,CAAC;MAC1F;MACA,IAAIH,MAAM,CAACJ,OAAO,CAAC,KAAK,CAAC,EAAE;QACvB,IAAII,MAAM,CAACN,OAAO,CAAC,KAAK,CAAC,EAAE;UACvBU,aAAa,CAACN,UAAU,CAAC;QAC7B,CAAC,MAAM;UACHH,UAAU,CAACK,MAAM,CAACN,OAAO,GAAG,CAAC,CAAC,CAACO,cAAc,CAACC,SAAS,EAAE;YAAEC,oBAAoB,EAAE;UAAE,CAAC,CAAC,CAAC;UACtFN,UAAU,CAAC,IAAI,CAAC;QACpB;MACJ;IACJ,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM;MACTO,aAAa,CAACN,UAAU,CAAC;IAC7B,CAAC;EACL,CAAC,CAAC;EACF,IAAIO,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;EACtBR,WAAW,CAAC,YAAY;IACpB,IAAIS,KAAK,GAAGF,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,CAAC,CAAC;IAChCI,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC;IACA;EACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;EAEV,oBACIpB,OAAA;IAAAyB,QAAA,GACKnB,OAAO,EAAC,GAAC,EAACE,OAAO;EAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEd;AAAC1B,EAAA,CApCQF,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAsCd,eAAeA,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}