{"ast":null,"code":"var _jsxFileName = \"/Users/theanthonywong/Code/cardGame24_v2/client/src/components/Timer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer(props) {\n  _s();\n  const [timer, setTimer] = useState('05:00');\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to \n      // add '0' at the beginning of the variable\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    }\n  };\n  const clearTimer = e => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next    \n    setTimer('00:00:10');\n\n    // If you try to remove this line the \n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // This is where you need to adjust if \n    // you entend to add more time\n    deadline.setSeconds(deadline.getSeconds() + 10);\n    return deadline;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.boolean ? \"correct\" : \"incorrect\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"correctTextPlacement\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.onEvaluate();\n      },\n      children: nextText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"1cLptbPNgMUXPLzrfR8t4/6s5jA=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Timer","props","_s","timer","setTimer","useState","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","startTimer","clearTimer","Ref","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","className","boolean","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEvaluate","nextText","_c","$RefreshReg$"],"sources":["/Users/theanthonywong/Code/cardGame24_v2/client/src/components/Timer.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction Timer(props) {\n    const [timer, setTimer] = useState('05:00');\n    const getTimeRemaining = (e) => {\n        const total = Date.parse(e) - Date.parse(new Date());\n        const seconds = Math.floor((total / 1000) % 60);\n        const minutes = Math.floor((total / 1000 / 60) % 60);\n        const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n        return {\n            total, hours, minutes, seconds\n        };\n    }\n  \n    const startTimer = (e) => {\n        let { total, hours, minutes, seconds } \n                    = getTimeRemaining(e);\n        if (total >= 0) {\n  \n            // update the timer\n            // check if less than 10 then we need to \n            // add '0' at the beginning of the variable\n            setTimer(\n                (hours > 9 ? hours : '0' + hours) + ':' +\n                (minutes > 9 ? minutes : '0' + minutes) + ':'\n                + (seconds > 9 ? seconds : '0' + seconds)\n            )\n        }\n    }\n  \n  \n    const clearTimer = (e) => {\n  \n        // If you adjust it you should also need to\n        // adjust the Endtime formula we are about\n        // to code next    \n        setTimer('00:00:10');\n  \n        // If you try to remove this line the \n        // updating of timer Variable will be\n        // after 1000ms or 1sec\n        if (Ref.current) clearInterval(Ref.current);\n        const id = setInterval(() => {\n            startTimer(e);\n        }, 1000)\n        Ref.current = id;\n    }\n  \n    const getDeadTime = () => {\n        let deadline = new Date();\n  \n        // This is where you need to adjust if \n        // you entend to add more time\n        deadline.setSeconds(deadline.getSeconds() + 10);\n        return deadline;\n    }\n    return (\n        <div className={props.boolean ? \"correct\":\"incorrect\"}>\n            <h1 className=\"correctTextPlacement\">{props.text}</h1>\n            <button onClick={()=>{\n            props.onEvaluate();\n            }}>{nextText}</button>\n        </div>\n    )\n}\n\nexport default Timer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}