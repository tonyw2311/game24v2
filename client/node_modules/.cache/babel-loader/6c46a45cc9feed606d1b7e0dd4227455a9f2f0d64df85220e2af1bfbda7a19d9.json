{"ast":null,"code":"var _jsxFileName = \"/Users/theanthonywong/Code/cardGame24_v2/my-app/src/components/Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CardSuit from \"./CardSuit\";\nimport { useDrag, DragPreviewImage } from 'react-dnd';\nimport { Types } from \"./Types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const img = \"heart\";\n  const [collected, drag, dragPreview] = useDrag(() => ({\n    type: Types.CARD,\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1\n    })\n  }));\n  return (\n    /*#__PURE__*/\n    /*     <div ref = {dragPreview}>\n          <div ref = {drag}  className=\"card grid-container\">\n            <div className=\"grid-item card-number\">{props.number}</div>\n            {Array.from({ length: 33 }, (_, i) =>\n              <CardSuit key={i} image={img} id={i} number={props.number} />)}\n            <div className=\"grid-item card-number backwards\">{props.number}</div>\n          </div>\n        </div>   */\n    _jsxDEV(\"div\", {\n      ref: preview,\n      style: {\n        ...style,\n        opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: drag,\n        style: handleStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), \"Drag me by the handle\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Card, \"TEg420EeVqEhs2FVhxDjrh6yCxo=\", false, function () {\n  return [useDrag];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","CardSuit","useDrag","DragPreviewImage","Types","jsxDEV","_jsxDEV","Card","props","_s","img","collected","drag","dragPreview","type","CARD","collect","monitor","opacity","isDragging","ref","preview","style","children","handleStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/theanthonywong/Code/cardGame24_v2/my-app/src/components/Card.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CardSuit from \"./CardSuit\";\nimport { useDrag, DragPreviewImage } from 'react-dnd';\nimport { Types } from \"./Types\";\n\nfunction Card(props) {\n  const img = \"heart\"\n\n\n  const [collected, drag, dragPreview] = useDrag(() => ({\n    type: Types.CARD,\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  }))\n\n  return (\n/*     <div ref = {dragPreview}>\n      <div ref = {drag}  className=\"card grid-container\">\n        <div className=\"grid-item card-number\">{props.number}</div>\n        {Array.from({ length: 33 }, (_, i) =>\n          <CardSuit key={i} image={img} id={i} number={props.number} />)}\n        <div className=\"grid-item card-number backwards\">{props.number}</div>\n      </div>\n    </div>   */\n    <div ref={preview} style={{ ...style, opacity }}>\n    <div ref={drag} style={handleStyle} />\n    Drag me by the handle\n  </div>\n  );\n}\n\nexport default Card;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,WAAW;AACrD,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAMC,GAAG,GAAG,OAAO;EAGnB,MAAM,CAACC,SAAS,EAAEC,IAAI,EAAEC,WAAW,CAAC,GAAGX,OAAO,CAAC,OAAO;IACpDY,IAAI,EAAEV,KAAK,CAACW,IAAI;IAChBC,OAAO,EAAGC,OAAO,KAAM;MACrBC,OAAO,EAAED,OAAO,CAACE,UAAU,EAAE,GAAG,GAAG,GAAG;IACxC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH;IAAA;IACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIb,OAAA;MAAKc,GAAG,EAAEC,OAAQ;MAACC,KAAK,EAAE;QAAE,GAAGA,KAAK;QAAEJ;MAAQ,CAAE;MAAAK,QAAA,gBAChDjB,OAAA;QAAKc,GAAG,EAAER,IAAK;QAACU,KAAK,EAAEE;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,yBAExC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM;AAER;AAACnB,EAAA,CAzBQF,IAAI;EAAA,QAI4BL,OAAO;AAAA;AAAA2B,EAAA,GAJvCtB,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}