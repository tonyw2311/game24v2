{"ast":null,"code":"var _jsxFileName = \"/Users/theanthonywong/Code/cardGame24_v2/client/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\"; // {useState}\nimport GameSection from \"./GameSection\";\nimport Leaderboard from \"./Leaderboard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [randFour, setRandFour] = useState([1, 2, 3, 4]);\n  const [randCard, setRandCard] = useState([\"spade\", \"heart\", \"club\", \"diamond\"]);\n  const [score, setScore] = useState(0);\n  const [evaluate, setEvaluate] = useState(null);\n  const [nameList, setNameList] = useState(\"\");\n  const [scoreList, setScoreList] = useState(\"\");\n  const [isHidden, setIsHidden] = useState(true);\n  const [inputText, setInputText] = useState(\"\");\n  //functions from node\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\").then(res => res.json()).then(data => {\n      setRandFour(data.randFour);\n      setRandCard(data.randCard);\n    });\n  }, []);\n\n  //data from mongoDB->node->react\n  useEffect(() => {\n    fetch(\"http://localhost:8000/home\").then(res => res.json()).then(dataSet => {\n      let tempNameList = [];\n      let tempScoreList = [];\n      dataSet.forEach(element => {\n        map;\n      });\n      data => {\n        tempNameList.push(data.name);\n        tempScoreList.push(data.score);\n      };\n      setNameList(tempNameList);\n      setScoreList(tempScoreList);\n    });\n  }, []);\n  function onSubmit(event) {\n    //can also use axios\n    axios.post('http://localhost:8000/create', {\n      name: inputText,\n      score: score\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n\n    /*         console.log(\"fetching\")\n            fetch('http://localhost:8000/create', {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\"},\n    \n                mode: 'cors',\n                // We convert the React state to JSON and send it as the POST body\n                body: JSON.stringify({\n                    name: \"inputText\",\n                    score: 14\n                })\n            }).then(response => response.json());\n            event.preventDefault(); */\n  }\n\n  function updateScore() {\n    if (evaluate) {\n      setScore(score + 100);\n    } else {\n      setScore(score - 100);\n    }\n  }\n\n  //console.log(evaluate);\n  function changeVisibility() {\n    setIsHidden(!isHidden);\n  }\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GameSection, {\n      randFour: randFour,\n      setEvaluate: setEvaluate,\n      randCard: randCard,\n      updateScore: updateScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Your Name Here\",\n      onChange: handleChange,\n      type: \"text\",\n      value: inputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      children: \"Submit Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeVisibility,\n      children: \"View Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n      name: nameList,\n      score: scoreList,\n      isHidden: isHidden\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"816nxGLwkAtMkxLOmXMKklzyznA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameSection","Leaderboard","axios","jsxDEV","_jsxDEV","App","_s","randFour","setRandFour","randCard","setRandCard","score","setScore","evaluate","setEvaluate","nameList","setNameList","scoreList","setScoreList","isHidden","setIsHidden","inputText","setInputText","fetch","then","res","json","data","dataSet","tempNameList","tempScoreList","forEach","element","map","push","name","onSubmit","event","post","console","log","updateScore","changeVisibility","handleChange","newValue","target","value","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","_c","$RefreshReg$"],"sources":["/Users/theanthonywong/Code/cardGame24_v2/client/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";// {useState}\nimport GameSection from \"./GameSection\";\nimport Leaderboard from \"./Leaderboard\";\nimport axios from \"axios\";\n\nfunction App() {\n\n    const [randFour, setRandFour] = useState([1, 2, 3, 4]);\n    const [randCard, setRandCard] = useState([\"spade\", \"heart\", \"club\", \"diamond\"]);\n    const [score, setScore] = useState(0);\n    const [evaluate, setEvaluate] = useState(null);\n    const [nameList, setNameList] = useState(\"\");\n    const [scoreList, setScoreList] = useState(\"\");\n    const [isHidden, setIsHidden] = useState(true);\n    const [inputText, setInputText] = useState(\"\");\n    //functions from node\n    useEffect(() => {\n        fetch(\"http://localhost:8000/message\")\n            .then((res) => res.json())\n            .then((data) => { setRandFour(data.randFour); setRandCard(data.randCard) });\n    }, []);\n\n    //data from mongoDB->node->react\n    useEffect(() => {\n        fetch(\"http://localhost:8000/home\")\n            .then((res) => res.json())\n            .then((dataSet) => {\n                let tempNameList = []\n                let tempScoreList = []\n                dataSet.forEach(element => {\n                    map\n                });(data => {\n                    tempNameList.push(data.name);\n                    tempScoreList.push(data.score);\n                })\n                setNameList(tempNameList);\n                setScoreList(tempScoreList);\n            });\n    }, []);\n\n    function onSubmit(event) {\n        //can also use axios\n        axios.post('http://localhost:8000/create', { \n            name: inputText,\n            score: score\n             })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n    \n\n    /*         console.log(\"fetching\")\n            fetch('http://localhost:8000/create', {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\"},\n    \n                mode: 'cors',\n                // We convert the React state to JSON and send it as the POST body\n                body: JSON.stringify({\n                    name: \"inputText\",\n                    score: 14\n                })\n            }).then(response => response.json());\n            event.preventDefault(); */\n}\n\nfunction updateScore() {\n    if (evaluate) {\n        setScore(score + 100);\n    }\n    else {\n        setScore(score - 100);\n    }\n}\n\n//console.log(evaluate);\nfunction changeVisibility() {\n    setIsHidden(!isHidden)\n}\n\nfunction handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n}\nreturn (\n    <div>\n        <div style={{ display: \"inline-flex\" }}>\n            <h1> Score: {score}</h1>\n        </div>\n\n        <GameSection randFour={randFour} setEvaluate={setEvaluate} randCard={randCard} updateScore={updateScore} />\n        <input placeholder=\"Your Name Here\" onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={onSubmit}>Submit Score</button>\n        {/* <h1>{randFour}</h1> */}\n\n        <button onClick={changeVisibility}>View Leaderboard</button>\n        <Leaderboard name={nameList} score={scoreList} isHidden={isHidden} />\n\n    </div>\n);\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}